import React, { useEffect, useState } from 'react'
import { Form, Typography, Input, Select, Space } from 'antd'
import { InfoCircleOutlined } from '@ant-design/icons'
import { styled } from 'styled-components'
import '../css/videoEditor.css'

const { Title } = Typography

const VideoEditorContainer = styled.div`
	display: flex;
`

const PreviewContainer = styled.div`
	position: relative;
	height: 330px;
	width: 185px;
	margin: 8px;
	overflow: hidden;
	border-radius: 8px;
`

const PreviewBackgroundContainer = styled.div`
	height: 330px;
	width: 185px;
	filter: blur(3px);
	background-position: center;
`

const PreviewImgContainer = styled.div`
	position: absolute;
	height: 330px;
	width: 185px;
	display: flex;
	justify-content: center;
  align-items: center;
	overflow: hidden;
	top: 0;
	left: 0;
`

const PreviewTextContainer = styled.div`
	position: absolute;
	top: 20px;
`

const PreviewText = styled.p`
	width: 185px;
	text-align: center;
	margin: 0;
	white-space: nowrap;
`

const Watermark = styled.p`
	position:absolute;
	top: 90%;
	width: 185px;
	text-align: center;
	color: gray;
	font-size: 8px;
`

const EditorContainer = styled.div`
	display: flex;
	flex-direction: column;
	flex: 1;
	margin-left: 48px;
	margin-top: 8px;
`

const EditorInputGroup = styled.div`
	display: flex;
	width: 100%;
`

const VideoEditor = ({ defaultRecipe, data, onRecipeChanged }) => {
  const [recipe, setRecipe] = useState(defaultRecipe)

  const onInputChanged = ({ target }) => {
    const [depth1, depth2] = target.id.split('.')
    const newRecipe = { ...recipe }
    newRecipe[depth1][depth2] = target.value
    setRecipe(newRecipe)
		onRecipeChanged(newRecipe)
  }

  return (
		<VideoEditorContainer>
			<PreviewContainer>
				<PreviewBackgroundContainer style={{
				  ...(recipe.video.blankFill === 'Blur' ? { backgroundImage: 'url("' + data.thumbnailUrl + '")' } : { backgroundColor: 'black' })
				}} />
				<PreviewImgContainer>
					<img src={data.thumbnailUrl} style={{
					  ...(() => {
					    if (recipe.video.videoSize === '1.0') {
					      return {
					        height: '330px'
					      }
					    } else {
					      return {
					        width: (Number(recipe.video.videoSize) + 0.5) * 185
					      }
					    }
					  })()
					}} />
				</PreviewImgContainer>
				<PreviewTextContainer>
					<PreviewText style={{ color: recipe.text1.color, fontFamily: recipe.text1.font, fontSize: 108 * recipe.text1.fontSize }}>{recipe.text1.text}</PreviewText>
					<PreviewText style={{ color: recipe.text2.color, fontFamily: recipe.text2.font, fontSize: 108 * recipe.text2.fontSize }}>{recipe.text2.text}</PreviewText>
				</PreviewTextContainer>
				<Watermark>Generated by toshort.video</Watermark>
			</PreviewContainer>

			<EditorContainer>
				<Title level={3} style={{ marginBottom: 16 }}>동영상 편집 구성</Title>
				<EditorInputGroup>
					<Form layout="vertical" requiredMark="optional" style={{ flex: 1.5 }}>
						<Form.Item
							label="상단 텍스트"
							tooltip={{ title: '최대 20자 까지 입력 가능', icon: <InfoCircleOutlined /> }}>
							<Input id="text1.text" type="text" placeholder="상단 텍스트 입력" maxLength={20} onChange={onInputChanged} value={recipe.text1.text} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="상단 텍스트 색상">
							<Input id="text1.color" type="color" onChange={onInputChanged} value={recipe.text1.color} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="상단 텍스트 크기">
							<Input 
								id="text1.fontSize" 
								type="range" 
								min={0.05} 
								max={0.15} 
								step={0.01}
								value={recipe.text1.fontSize}
								onChange={({ target }) => onInputChanged({
									target: {
										id: 'text1.fontSize',
								    value: Number(target.value)
									}
								})} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.75, marginLeft: 8 }}>
						<Form.Item label="상단 텍스트 폰트">
							<Space.Compact style={{ width: '100%' }}>
								<Select defaultValue="NotoSansKR" value={recipe.text1.font} onSelect={(value) => onInputChanged({
								  target: {
								    id: 'text1.font',
								    value
								  }
								})}>
									<Select.Option value="NotoSansKR">노토산스</Select.Option>
									<Select.Option value="SCDream">에스코어드림</Select.Option>
									<Select.Option value="BMJUA">배달의민족주아</Select.Option>
									<Select.Option value="Cafe24Danjunghae">카페24단정해</Select.Option>
									<Select.Option value="Cafe24Shiningstar">카페24빛나는별</Select.Option>
									<Select.Option value="Jalnan">여기어때잘난체</Select.Option>
									<Select.Option value="Reko">레시피코리아레코체</Select.Option>
									<Select.Option value="GangwonTeunTeun">강원교육튼튼체</Select.Option>
								</Select>
							</Space.Compact>
						</Form.Item>
					</Form>
				</EditorInputGroup>

				<EditorInputGroup>
					<Form layout="vertical" requiredMark="optional" style={{ flex: 1.5 }}>
						<Form.Item
							label="하단 텍스트"
							tooltip={{ title: '최대 20자 까지 입력 가능', icon: <InfoCircleOutlined /> }}>
							<Input id="text2.text" type="text" placeholder="하단 텍스트 입력" maxLength={20} onChange={onInputChanged} value={recipe.text2.text} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="하단 텍스트 색상">
							<Input id="text2.color" type="color" onChange={onInputChanged} value={recipe.text2.color} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="하단 텍스트 크기">
							<Input 
								id="text2.fontSize" 
								type="range" 
								min={0.05} 
								max={0.15} 
								step={0.01}
								value={recipe.text2.fontSize} 
								onChange={({ target }) => onInputChanged({
									target: {
										id: 'text2.fontSize',
								    value: Number(target.value)
									}
								})} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.75, marginLeft: 8 }}>
						<Form.Item label="하단 텍스트 폰트">
							<Space.Compact style={{ width: '100%' }}>
								<Select defaultValue="NotoSansKR" value={recipe.text2.font} onSelect={(value) => onInputChanged({
								  target: {
								    id: 'text2.font',
								    value
								  }
								})}>
									<Select.Option value="NotoSansKR">노토산스</Select.Option>
									<Select.Option value="SCDream">에스코어드림</Select.Option>
									<Select.Option value="BMJUA">배달의민족주아</Select.Option>
									<Select.Option value="Cafe24Danjunghae">카페24단정해</Select.Option>
									<Select.Option value="Cafe24Shiningstar">카페24빛나는별</Select.Option>
									<Select.Option value="Jalnan">여기어때잘난체</Select.Option>
									<Select.Option value="Reko">레시피코리아레코체</Select.Option>
									<Select.Option value="GangwonTeunTeun">강원교육튼튼체</Select.Option>
								</Select>
							</Space.Compact>
						</Form.Item>
					</Form>
				</EditorInputGroup>

				<EditorInputGroup>
					<Form layout="vertical" style={{ flex: 0.5 }}>
						<Form.Item label="비디오 시작 시간">
							<Input 
								type="number" 
								id="video.startAt" 
								addonAfter="초" 
								defaultValue={0} 
								min={0} 
								max={data.videoDuration} 
								step={0.1} 
								onChange={({ target }) => onInputChanged({
									target: {
										id: 'video.startAt',
										value: Number(target.value)
									}
								})} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="비디오 종료 시간">
							<Input 
								type="number" 
								id="video.endAt" 
								addonAfter="초" 
								defaultValue={data.videoDuration > 60 ? 60 : data.videoDuration} 
								min={recipe.video.startAt} 
								max={data.videoDuration} 
								step={0.1} 
								onChange={({ target }) => onInputChanged({
									target: {
										id: 'video.endAt',
										value: Number(target.value)
									}
								})} />
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="배경 처리">
							<Select defaultValue="Black" value={recipe.video.blankFill} onSelect={(value) => onInputChanged({
							  target: {
							    id: 'video.blankFill',
							    value
							  }
							})}>
								<Select.Option value="Black">검정</Select.Option>
								<Select.Option value="Blur">블러</Select.Option>
							</Select>
						</Form.Item>
					</Form>
					<Form layout="vertical" style={{ flex: 0.5, marginLeft: 8 }}>
						<Form.Item label="동영상 표시 크기">
							<Select defaultValue="0.65" value={recipe.video.videoSize} onSelect={(value) => onInputChanged({
							  target: {
							    id: 'video.videoSize',
							    value
							  }
							})}>
								<Select.Option value="0.5">작게</Select.Option>
								<Select.Option value="0.65">보통</Select.Option>
								<Select.Option value="1.0">꽉 차게</Select.Option>
							</Select>
						</Form.Item>
					</Form>
				</EditorInputGroup>
			</EditorContainer>
		</VideoEditorContainer>
  )
}

export default VideoEditor
